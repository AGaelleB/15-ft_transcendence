# docker-compose.yml

version: '3.8'
services:
  db:
    image: postgres:14
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - transcendence

  django:
    build:
      context: ./django
    env_file:
      - .env
    environment:    # manuellement pour que Django puisse y acc√©der
    # configs temporaire pour faire fonction le backend 
    # declaration pour match avec django/mybackend/settings.py
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
    volumes:
      - ./django:/app
    networks:
      - transcendence
    ports:
      - "8000:8000"
    depends_on:
      - db

  nginx:
    build:
      context: ./nginx
    env_file:
      - .env
    ports:
      - "8000:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - transcendence

volumes:
  pgdata:

networks:
  transcendence:
    driver: bridge